{"ast":null,"code":"var _jsxFileName = \"/Users/aradhye/Documents/Coding/budgetv1/client/src/components/LoginPage.js\",\n  _s = $RefreshSig$();\nimport { set } from \"mongoose\";\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LoginPage() {\n  _s();\n  const [loggedIn, setLoggedIn] = useState(false);\n  function checkUser(e) {\n    e.preventDefault();\n    console.log(\"SUbmitted\");\n    const user = e.target.username.value;\n    const pass = e.target.password.value;\n    async function fetchText() {\n      let response = await fetch('http://localhost:8080/127.0.0.1:3100/', {});\n      console.log(response);\n      console.log(response.status); // 200\n      console.log(response.statusText); // OK\n      if (response.status === 200) {\n        let data = await response.text();\n        let jsonData = JSON.parse(data);\n        for (let i = 0; i < jsonData.length; i++) {\n          if (jsonData[i].name === user) {\n            setLoggedIn(true);\n            console.log(\"Successfully Logged in\");\n          }\n        }\n        if (loggedIn === false) {\n          console.log(\"User does not exist. Redirecting to Sign Up page. \");\n        }\n      }\n    }\n    fetchText();\n  }\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: checkUser,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Username\",\n      name: \"username\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Password\",\n      name: \"password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n}\n_s(LoginPage, \"rumETxDPcQWJcg8a6Y55ZSVDz7g=\");\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["set","React","useState","jsxDEV","_jsxDEV","LoginPage","_s","loggedIn","setLoggedIn","checkUser","e","preventDefault","console","log","user","target","username","value","pass","password","fetchText","response","fetch","status","statusText","data","text","jsonData","JSON","parse","i","length","name","onSubmit","children","type","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/aradhye/Documents/Coding/budgetv1/client/src/components/LoginPage.js"],"sourcesContent":["import { set } from \"mongoose\";\nimport React,{useState} from \"react\";\n\nfunction LoginPage(){\n    const [loggedIn, setLoggedIn] = useState(false);\n\n    function checkUser(e){\n        e.preventDefault();\n        console.log(\"SUbmitted\");\n        const user = e.target.username.value;\n        const pass = e.target.password.value;\n        \n\n        async function fetchText() {\n            let response = await fetch('http://localhost:8080/127.0.0.1:3100/',{});\n            console.log(response);\n            console.log(response.status); // 200\n            console.log(response.statusText); // OK\n            if (response.status === 200) {\n                let data = await response.text();\n                let jsonData = JSON.parse(data);\n                \n                for (let i = 0; i < jsonData.length ; i++ ){\n                    if(jsonData[i].name===user){\n                        setLoggedIn(true);\n                        console.log(\"Successfully Logged in\");\n                    }\n                }\n                if (loggedIn===false){\n                    console.log(\"User does not exist. Redirecting to Sign Up page. \");\n\n                }\n            }\n        }\n\n        fetchText();\n    }\n\n\n    return (\n        <form onSubmit={checkUser}>\n            <input type=\"text\" placeholder=\"Username\" name=\"username\"></input>\n            <input type=\"text\" placeholder=\"Password\" name=\"password\"></input>\n            <button type=\"submit\">Submit</button>\n        </form>\n    )\n}\n\nexport default LoginPage;"],"mappings":";;AAAA,SAASA,GAAG,QAAQ,UAAU;AAC9B,OAAOC,KAAK,IAAEC,QAAQ,QAAO,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErC,SAASC,SAASA,CAAA,EAAE;EAAAC,EAAA;EAChB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAC,KAAK,CAAC;EAE/C,SAASO,SAASA,CAACC,CAAC,EAAC;IACjBA,CAAC,CAACC,cAAc,EAAE;IAClBC,OAAO,CAACC,GAAG,CAAC,WAAW,CAAC;IACxB,MAAMC,IAAI,GAAGJ,CAAC,CAACK,MAAM,CAACC,QAAQ,CAACC,KAAK;IACpC,MAAMC,IAAI,GAAGR,CAAC,CAACK,MAAM,CAACI,QAAQ,CAACF,KAAK;IAGpC,eAAeG,SAASA,CAAA,EAAG;MACvB,IAAIC,QAAQ,GAAG,MAAMC,KAAK,CAAC,uCAAuC,EAAC,CAAC,CAAC,CAAC;MACtEV,OAAO,CAACC,GAAG,CAACQ,QAAQ,CAAC;MACrBT,OAAO,CAACC,GAAG,CAACQ,QAAQ,CAACE,MAAM,CAAC,CAAC,CAAC;MAC9BX,OAAO,CAACC,GAAG,CAACQ,QAAQ,CAACG,UAAU,CAAC,CAAC,CAAC;MAClC,IAAIH,QAAQ,CAACE,MAAM,KAAK,GAAG,EAAE;QACzB,IAAIE,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,EAAE;QAChC,IAAIC,QAAQ,GAAGC,IAAI,CAACC,KAAK,CAACJ,IAAI,CAAC;QAE/B,KAAK,IAAIK,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,QAAQ,CAACI,MAAM,EAAGD,CAAC,EAAE,EAAE;UACvC,IAAGH,QAAQ,CAACG,CAAC,CAAC,CAACE,IAAI,KAAGlB,IAAI,EAAC;YACvBN,WAAW,CAAC,IAAI,CAAC;YACjBI,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAC;UACzC;QACJ;QACA,IAAIN,QAAQ,KAAG,KAAK,EAAC;UACjBK,OAAO,CAACC,GAAG,CAAC,oDAAoD,CAAC;QAErE;MACJ;IACJ;IAEAO,SAAS,EAAE;EACf;EAGA,oBACIhB,OAAA;IAAM6B,QAAQ,EAAExB,SAAU;IAAAyB,QAAA,gBACtB9B,OAAA;MAAO+B,IAAI,EAAC,MAAM;MAACC,WAAW,EAAC,UAAU;MAACJ,IAAI,EAAC;IAAU;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS,eAClEpC,OAAA;MAAO+B,IAAI,EAAC,MAAM;MAACC,WAAW,EAAC,UAAU;MAACJ,IAAI,EAAC;IAAU;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS,eAClEpC,OAAA;MAAQ+B,IAAI,EAAC,QAAQ;MAAAD,QAAA,EAAC;IAAM;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAClC;AAEf;AAAClC,EAAA,CA3CQD,SAAS;AAAAoC,EAAA,GAATpC,SAAS;AA6ClB,eAAeA,SAAS;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}